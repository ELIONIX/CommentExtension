//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommentGenerator {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class VSPackage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VSPackage() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CommentGenerator.VSPackage", typeof(VSPackage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   ELIONIX に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _1000 {
            get {
                return ResourceManager.GetString("1000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Comment generator に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _1001 {
            get {
                return ResourceManager.GetString("1001", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Constants に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CategoryConstants {
            get {
                return ResourceManager.GetString("CategoryConstants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name used for author item of document comment. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DescriptionAuthor {
            get {
                return ResourceManager.GetString("DescriptionAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copyright notation used for note items in document comments. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DescriptionCopyright {
            get {
                return ResourceManager.GetString("DescriptionCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date format string in the same format as used in DateTime.ToString function. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DescriptionDateFormat {
            get {
                return ResourceManager.GetString("DescriptionDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Author に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisplayNameAuthor {
            get {
                return ResourceManager.GetString("DisplayNameAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copyright に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisplayNameCopyright {
            get {
                return ResourceManager.GetString("DisplayNameCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Date format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisplayNameDateFormat {
            get {
                return ResourceManager.GetString("DisplayNameDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorMessageTitle {
            get {
                return ResourceManager.GetString("ErrorMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no element for comment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ErrorNoTarget {
            get {
                return ResourceManager.GetString("ErrorNoTarget", resourceCulture);
            }
        }
    }
}
